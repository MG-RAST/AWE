# v0.9.30

- added /logger resource
  - /logger?debug=N - PUT debug level
  - /logger?debug - GET debug level
  - /logger?event - GET event code descriptions
- removed unneeded / unused jid from job document and codebase (servermgr handle)
- workunit log cleanup - delete on task reset
- add server and client config option '--logoutput' to set output logs to file or console, or both

# v0.9.29

- vendor path changes for golang 1.6 support
- docker file updates
  - alpha base image
  - golang 1.6.3

# v0.9.27

- improved log / error messages
- added 'report' option to job GET, returns a summary of job with stdout, stderr, and worknotes for each workunit ran
- changed max jid to be stored in mongodb and not on filesystem
  - this is backwards compatible, will use jid on filesystem for first time if no value is in mongodb

# v0.9.26

- added 'full' option to job DELETE, actually deletes job from mongoDB and filesystem
- added expiration to job document
  - set globally or per pipeline in config (off by default)
  - user settable
  - time is from completion of job
- added 'resubmit' option to job PUT, re-starts job from beginning
- refactor re-enqueue functions: resume, recompute, resubmit, recover
- re-enqueueing a task now deletes the shock nodes of the outputs, no more orphaned nodes
- fix race-condition resulting in broken re-enqueueing of tasks
- add 'distinct' option to job query for list of distinct values, must be indexed field in job.info
- update base API response
- added /event resource - event code descriptions
- expanded /queue resource
  - option for json output format
  - admin user only options to view current state of in-memory queues
- added 'import' field to job POST, allow import of completed job documents into mongoDB
- add validation for some config parameters

# v0.9.25

- fix bug in server when checking out workunit

# v0.9.24

- explicit check for bson document max size upon save, return meaningful error
- test mongo connection with short timeout on startup
- client sends available disk size in bytes when requesting a workunit
- server filters workunits based on sum of input sizes compared to available disk space on client

# v0.9.23

- added suspend / resume action for server work queue, admin users only

# v0.9.22

- fixed bug with docker predata dir
- added config options to client that were previously hardcoded

# v0.9.21

- adding logging and code cleanup to App usage
- updates to dockerfile
- bug fixes

# v0.9.20

- Update to newer version of mgo (v2)
- Removed dockerized version of mgo lib that is no longer in use.
